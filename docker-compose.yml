version: '3'

networks:
  frontend:
    driver: bridge
  backend:
    driver: bridge

services:
   mysql:
       image: mysql:5.7
       container_name: ${APP_NAME}_mysql
       restart: always
       environment:
           MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
           MYSQL_DATABASE: ${MYSQL_DATABASE}
           MYSQL_USER: ${MYSQL_USER}
           MYSQL_PASSWORD: ${MYSQL_PASSWORD}
       ports:
           - ${OUTSIDE_DB_PORT}:3306
       volumes:
           - "./data/db/mysql:/var/lib/mysql"
           - "./etc/mysql:/etc/mysql/conf.d"
       networks:
         - backend

   mailcatcher:
       image: schickling/mailcatcher
       container_name: ${APP_NAME}_mailcatcher
       ports:
           - ${PORT_MAILCATCHER}:1080
   redis:
       container_name: ${APP_NAME}_redis
       image: redis
       ports:
         - "${PORT_REDIS}:6379"
       volumes:
         - "./data/redis:/data"
       restart: always
   phpmyadmin:
       image: phpmyadmin/phpmyadmin
       container_name: phpmyadmin
       ports:
           - ${PORT_PHPMYADMIN}:80
       restart: always
       links:
           - mysql:mysql
       depends_on:
           - mysql
   php:
       build:
         context: ./etc/php
         args:
           - INSTALL_NODE=${INSTALL_NODE}
           - INSTALL_GULP=${INSTALL_GULP}
           - INSTALL_BOWER=${INSTALL_BOWER}
           - INSTALL_POSTGRESQL=${INSTALL_POSTGRESQL}
           - INSTALL_MYSQL=${INSTALL_MYSQL}
           - INSTALL_GD=${INSTALL_GD}
           - ADD_ALIASES=${ADD_ALIASES}
           - INSTALL_XDEBUG=${INSTALL_XDEBUG}
       container_name: ${APP_NAME}_php
       entrypoint: sh /bin/entrypoint.sh php-fpm
       restart: always
       volumes:
           - "./etc/php/php.ini:/usr/local/etc/php/conf.d/php.ini"
           - ${APP_PATH}:/var/www/html
           - './etc/log/nginx:/var/log/nginx'
           - ./etc/php/entrypoint.sh:/bin/entrypoint.sh
           - ~/.ssh/id_rsa:/root/.ssh/id_rsa #default php docker user is root, needs to ssh into drichied-server
       networks:
         - backend

   nginx:
       build: ./etc/nginx
       container_name: ${APP_NAME}_nginx
       ports:
           - 80:80
           - 443:443
       restart: always
       volumes:
           - "./etc/nginx/nginx.conf:/etc/nginx/nginx.conf"
           - "./etc/nginx/app.conf:/etc/nginx/sites-available/application.conf"
           - "./etc/nginx/app.conf:/etc/nginx/sites-enabled/application"
           - "./etc/ssl:/etc/ssl"
           - './etc/log/nginx:/var/log/nginx'
           - ${APP_PATH}:/var/www/html
       depends_on:
           - php
       networks:
         frontend:
         backend:
           aliases:
             - youdo.test